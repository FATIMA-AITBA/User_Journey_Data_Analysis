{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1vOMjqGq0FuJA5QEVtzaeQXjRdka-OhYO","authorship_tag":"ABX9TyNGv4ht7BtK4aG/E2++a8eN"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":27,"metadata":{"id":"hQeLV2Os-ueD","executionInfo":{"status":"ok","timestamp":1743982267061,"user_tz":-60,"elapsed":17,"user":{"displayName":"FATIMA AIT BA","userId":"04083776487665113094"}}},"outputs":[],"source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","\n","from sklearn.metrics import mean_squared_error, r2_score\n","import matplotlib.pyplot as plt\n","import joblib\n","import numpy as np\n"]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/user-jurney-analysis/user_journey_raw.csv')\n"],"metadata":{"id":"jc-8AVC9_KA0","executionInfo":{"status":"ok","timestamp":1743982267207,"user_tz":-60,"elapsed":145,"user":{"displayName":"FATIMA AIT BA","userId":"04083776487665113094"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_AvHkGT-NJyT","executionInfo":{"status":"ok","timestamp":1743982267375,"user_tz":-60,"elapsed":249,"user":{"displayName":"FATIMA AIT BA","userId":"04083776487665113094"}},"outputId":"a96dff09-48c7-458e-ca77-481ecf7d2e66"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id  session_id subscription_type  \\\n","0     1516     2980231            Annual   \n","1     1516     2980248            Annual   \n","2     1516     2992252            Annual   \n","3     1516     3070491            Annual   \n","4     1516     3709807            Annual   \n","\n","                                        user_journey  \n","0  Homepage-Log in-Log in-Log in-Log in-Log in-Lo...  \n","1  Other-Sign up-Sign up-Sign up-Sign up-Sign up-...  \n","2          Log in-Log in-Log in-Log in-Log in-Log in  \n","3  Homepage-Log in-Log in-Log in-Log in-Log in-Lo...  \n","4  Log in-Log in-Log in-Log in-Log in-Log in-Log ...  "],"text/html":["\n","  <div id=\"df-7b37a1b7-8f63-4365-a76e-d8d8b91e4905\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>session_id</th>\n","      <th>subscription_type</th>\n","      <th>user_journey</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1516</td>\n","      <td>2980231</td>\n","      <td>Annual</td>\n","      <td>Homepage-Log in-Log in-Log in-Log in-Log in-Lo...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1516</td>\n","      <td>2980248</td>\n","      <td>Annual</td>\n","      <td>Other-Sign up-Sign up-Sign up-Sign up-Sign up-...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1516</td>\n","      <td>2992252</td>\n","      <td>Annual</td>\n","      <td>Log in-Log in-Log in-Log in-Log in-Log in</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1516</td>\n","      <td>3070491</td>\n","      <td>Annual</td>\n","      <td>Homepage-Log in-Log in-Log in-Log in-Log in-Lo...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1516</td>\n","      <td>3709807</td>\n","      <td>Annual</td>\n","      <td>Log in-Log in-Log in-Log in-Log in-Log in-Log ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b37a1b7-8f63-4365-a76e-d8d8b91e4905')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7b37a1b7-8f63-4365-a76e-d8d8b91e4905 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7b37a1b7-8f63-4365-a76e-d8d8b91e4905');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0080cfa0-1abf-40c4-9eeb-122b90f8de74\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0080cfa0-1abf-40c4-9eeb-122b90f8de74')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0080cfa0-1abf-40c4-9eeb-122b90f8de74 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 9935,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106934,\n        \"min\": 1516,\n        \"max\": 509096,\n        \"num_unique_values\": 1350,\n        \"samples\": [\n          364433,\n          479607,\n          464521\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"session_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1095087,\n        \"min\": 1817,\n        \"max\": 4845427,\n        \"num_unique_values\": 9935,\n        \"samples\": [\n          4551197,\n          4618195,\n          996471\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subscription_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Annual\",\n          \"Monthly\",\n          \"Quarterly\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"user_journey\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1841,\n        \"samples\": [\n          \"Homepage-Courses-Courses-Courses-Courses-Courses-Courses-Courses-Courses-Sign up-Homepage-Homepage-Homepage-Career tracks-Career tracks-Career tracks-Career tracks-Career tracks-Career tracks-Career tracks-Career tracks-Sign up-Sign up-Sign up\",\n          \"Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout-Checkout\",\n          \"Homepage-Homepage-Homepage-Career tracks-Career tracks-Courses-Career tracks-Career tracks-Career tracks-Pricing-Pricing-Homepage-Homepage-Homepage-Homepage-Homepage-Homepage-Homepage-Homepage-Homepage\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["checking messing values"],"metadata":{"id":"5bd4AaPNRBQJ"}},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"L9NbqLN-Q5d1","executionInfo":{"status":"ok","timestamp":1743982267417,"user_tz":-60,"elapsed":40,"user":{"displayName":"FATIMA AIT BA","userId":"04083776487665113094"}},"outputId":"b77e22f7-1f09-4f4c-e954-f392d50b9eb2"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["user_id              0\n","session_id           0\n","subscription_type    0\n","user_journey         0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>user_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>session_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>subscription_type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>user_journey</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["# Data Preprocessing\n"],"metadata":{"id":"gSDJu8lZNpjs"}},{"cell_type":"markdown","source":["the different sessions are related and can be considered a single user journey. That’s why I created the group_by() function, which takes all the mini journeys of all sessions and groups them.\n","\n","But as stated earlier, not all sessions might be relevant. That’s why I decided to add the sessions parameter to the group function. The person who analyzes the data can determine whether to group all sessions or just the first N or last N sessions. This provides freedom and flexibility in the analysis later."],"metadata":{"id":"FLFZo1QrNxlT"}},{"cell_type":"code","source":["import pandas as pd\n","\n","def group_by(data, group_column='user_id', target_column='user_journey',\n","             sessions=3, count_from='first'):\n","    \"\"\"\n","    Group user journeys by user_id and concatenate the first N sessions.\n","\n","    Args:\n","        data (pd.DataFrame): The DataFrame containing the data.\n","        group_column (str): The column to group by (e.g., 'user_id').\n","        target_column (str): The column containing the user journey.\n","        sessions (int): Number of sessions to include (e.g., 3).\n","        count_from (str): 'first' to include the first sessions, 'last' for the last.\n","\n","    Returns:\n","        pd.DataFrame: DataFrame with the concatenated user journeys and subscription type.\n","    \"\"\"\n","\n","    def concatenate_journeys(group):\n","        \"\"\"Concatenate the user journeys for a user.\"\"\"\n","        if isinstance(sessions, int):\n","            if count_from == 'last':\n","                group = group.iloc[-sessions:]\n","            else:\n","                group = group.iloc[:sessions]\n","        full_journey = '-'.join(group[target_column])\n","        # Get the first subscription_type (assuming it's the same for all sessions)\n","        subscription = group['subscription_type'].iloc[0]\n","        return pd.Series({'subscription_type': subscription ,'full_user_journey': full_journey, })\n","\n","    # Sort the data by user and session\n","    data_sorted = data.sort_values(by=[group_column, 'session_id'])\n","\n","    # Group by user and apply the function\n","    grouped_df = data_sorted.groupby(group_column).apply(concatenate_journeys).reset_index()\n","\n","    return grouped_df\n","\n","# Apply the function\n","df_grouped = group_by(df, group_column='user_id', target_column='user_journey', sessions=3)\n","\n","# Count the number of users\n","num_records = df_grouped.shape[0]\n","\n","# Output\n","print(f\"Number of records after grouping the first 3 sessions: {num_records}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eQXKr57Ql0-k","executionInfo":{"status":"ok","timestamp":1743982267502,"user_tz":-60,"elapsed":84,"user":{"displayName":"FATIMA AIT BA","userId":"04083776487665113094"}},"outputId":"f6f3ba24-7599-43ec-e31a-9a7923d05ac1"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of records after grouping the first 3 sessions: 1350\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-31-9ac0c7e2ca8c>:35: DeprecationWarning: DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n","  grouped_df = data_sorted.groupby(group_column).apply(concatenate_journeys).reset_index()\n"]}]},{"cell_type":"code","source":["df_grouped.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"zEKVX1J6mwDM","executionInfo":{"status":"ok","timestamp":1743982268339,"user_tz":-60,"elapsed":836,"user":{"displayName":"FATIMA AIT BA","userId":"04083776487665113094"}},"outputId":"040c4a46-c845-43da-c2b3-af29f561156d"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id subscription_type  \\\n","0     1516            Annual   \n","1     3395            Annual   \n","2    10107            Annual   \n","3    11145           Monthly   \n","4    12400           Monthly   \n","\n","                                   full_user_journey  \n","0  Homepage-Log in-Log in-Log in-Log in-Log in-Lo...  \n","1  Other-Other-Pricing-Sign up-Sign up-Log in-Log...  \n","2  Homepage-Homepage-Homepage-Homepage-Homepage-H...  \n","3  Homepage-Log in-Log in-Log in-Log in-Log in-Ho...  \n","4  Homepage-Career tracks-Career tracks-Career tr...  "],"text/html":["\n","  <div id=\"df-055480c1-028f-4410-8601-d37f7a542ae4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>subscription_type</th>\n","      <th>full_user_journey</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1516</td>\n","      <td>Annual</td>\n","      <td>Homepage-Log in-Log in-Log in-Log in-Log in-Lo...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3395</td>\n","      <td>Annual</td>\n","      <td>Other-Other-Pricing-Sign up-Sign up-Log in-Log...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10107</td>\n","      <td>Annual</td>\n","      <td>Homepage-Homepage-Homepage-Homepage-Homepage-H...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11145</td>\n","      <td>Monthly</td>\n","      <td>Homepage-Log in-Log in-Log in-Log in-Log in-Ho...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12400</td>\n","      <td>Monthly</td>\n","      <td>Homepage-Career tracks-Career tracks-Career tr...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-055480c1-028f-4410-8601-d37f7a542ae4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-055480c1-028f-4410-8601-d37f7a542ae4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-055480c1-028f-4410-8601-d37f7a542ae4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-97d79e3d-9a61-4a4b-8f48-37a6c07c74a9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-97d79e3d-9a61-4a4b-8f48-37a6c07c74a9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-97d79e3d-9a61-4a4b-8f48-37a6c07c74a9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_grouped","summary":"{\n  \"name\": \"df_grouped\",\n  \"rows\": 1350,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 103548,\n        \"min\": 1516,\n        \"max\": 509096,\n        \"num_unique_values\": 1350,\n        \"samples\": [\n          364433,\n          479607,\n          464521\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subscription_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Annual\",\n          \"Monthly\",\n          \"Quarterly\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"full_user_journey\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1080,\n        \"samples\": [\n          \"Courses-Sign up-Sign up-Sign up-Sign up-Sign up-Checkout-Checkout-Coupon-Coupon\",\n          \"Homepage-Career tracks-Career tracks-Career tracks-Career tracks-Career tracks-Pricing-Checkout-Pricing-Career track certificate-Career track certificate-Career track certificate-Career track certificate-Career track certificate-Career track certificate-Career track certificate-Other-Pricing-Pricing-Pricing-Pricing-Pricing\",\n          \"Homepage-Sign up-Sign up-Sign up-Sign up-Sign up-Log in-Log in-Checkout-Checkout-Checkout-Checkout\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["Since we are not concerned with the time spent on each page or the number of clicks on a specific page, we can remove consecutive duplicate page visits and retain only the sequence that led to the subscription. We can also consolidate all session IDs into a single user ID for each individual."],"metadata":{"id":"GZk8pbUpSiVw"}},{"cell_type":"code","source":["import pandas as pd\n","\n","def remove_page_duplicates(data, target_column='user_journey'):\n","    \"\"\"\n","    Supprime les étapes répétées consécutives dans le parcours utilisateur.\n","\n","    Args:\n","        data (pd.DataFrame): Le DataFrame contenant la colonne des parcours utilisateurs.\n","        target_column (str): Le nom de la colonne contenant les parcours utilisateurs.\n","\n","    Returns:\n","        pd.DataFrame: Le DataFrame avec la colonne nettoyée.\n","    \"\"\"\n","    # Fonction pour nettoyer chaque parcours utilisateur\n","    def clean_journey(journey):\n","        if pd.isna(journey):  # Gérer les valeurs NaN\n","            return journey\n","        steps = journey.split('-')  # Séparer les étapes\n","        cleaned_steps = [steps[0]]  # Initialiser avec la première étape\n","\n","        # Ajouter une étape seulement si elle est différente de la précédente\n","        for step in steps[1:]:\n","            if step != cleaned_steps[-1]:\n","                cleaned_steps.append(step)\n","\n","        return '-'.join(cleaned_steps)  # Reconstituer le parcours nettoyé\n","\n","    # Appliquer la fonction de nettoyage à la colonne target_column\n","    data[target_column] = data[target_column].astype(str).apply(clean_journey)\n","\n","    return data  # Retourner le DataFrame modifié\n","\n","\n","# Nettoyer directement la colonne user_journey\n","new_df = remove_page_duplicates(df_grouped, target_column='full_user_journey')\n","\n","\n"],"metadata":{"id":"1zDh-2CcZgsO","executionInfo":{"status":"ok","timestamp":1743982268342,"user_tz":-60,"elapsed":2,"user":{"displayName":"FATIMA AIT BA","userId":"04083776487665113094"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["new_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"4Mk2wUfuQNV1","executionInfo":{"status":"ok","timestamp":1743982268627,"user_tz":-60,"elapsed":284,"user":{"displayName":"FATIMA AIT BA","userId":"04083776487665113094"}},"outputId":"6bbc1b15-0eb8-4f9f-f9c3-12240a09dda5"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id subscription_type  \\\n","0     1516            Annual   \n","1     3395            Annual   \n","2    10107            Annual   \n","3    11145           Monthly   \n","4    12400           Monthly   \n","\n","                                   full_user_journey  \n","0               Homepage-Log in-Other-Sign up-Log in  \n","1      Other-Pricing-Sign up-Log in-Homepage-Pricing  \n","2  Homepage-Career tracks-Homepage-Career tracks-...  \n","3    Homepage-Log in-Homepage-Log in-Homepage-Log in  \n","4  Homepage-Career tracks-Sign up-Log in-Other-Ca...  "],"text/html":["\n","  <div id=\"df-0d69122b-922c-4647-a0d1-3bf7c576e4b7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>subscription_type</th>\n","      <th>full_user_journey</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1516</td>\n","      <td>Annual</td>\n","      <td>Homepage-Log in-Other-Sign up-Log in</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3395</td>\n","      <td>Annual</td>\n","      <td>Other-Pricing-Sign up-Log in-Homepage-Pricing</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10107</td>\n","      <td>Annual</td>\n","      <td>Homepage-Career tracks-Homepage-Career tracks-...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11145</td>\n","      <td>Monthly</td>\n","      <td>Homepage-Log in-Homepage-Log in-Homepage-Log in</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12400</td>\n","      <td>Monthly</td>\n","      <td>Homepage-Career tracks-Sign up-Log in-Other-Ca...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d69122b-922c-4647-a0d1-3bf7c576e4b7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0d69122b-922c-4647-a0d1-3bf7c576e4b7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0d69122b-922c-4647-a0d1-3bf7c576e4b7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-09b8f6b3-0623-4e1d-9418-e8f5a92553fa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-09b8f6b3-0623-4e1d-9418-e8f5a92553fa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-09b8f6b3-0623-4e1d-9418-e8f5a92553fa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"new_df","summary":"{\n  \"name\": \"new_df\",\n  \"rows\": 1350,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 103548,\n        \"min\": 1516,\n        \"max\": 509096,\n        \"num_unique_values\": 1350,\n        \"samples\": [\n          364433,\n          479607,\n          464521\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subscription_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Annual\",\n          \"Monthly\",\n          \"Quarterly\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"full_user_journey\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 768,\n        \"samples\": [\n          \"Homepage-Career tracks-Pricing-Career tracks-Homepage-Career tracks-Courses-Career tracks-Courses-Career tracks-Courses-Career tracks-Courses-Career tracks-Courses-Log in-Sign up\",\n          \"Homepage-Career track certificate-Resources center-Career track certificate-Sign up-Log in-Resources center-Career track certificate-Sign up-Log in\",\n          \"Coupon-Sign up-Homepage-Pricing-Course certificate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["We don’t know if all pages are relevant for a user journey. There might be certain pages with 'Other', for example, that don’t contribute to the underlying patterns, so it would be nice to be able to exclude them."],"metadata":{"id":"qGf3LYB4vQMo"}},{"cell_type":"code","source":["def remove_pages(data, pages, target_column='user_journey'):\n","    \"\"\"\n","    Supprime certaines pages spécifiques du parcours utilisateur.\n","\n","    Args:\n","        data (pd.DataFrame): Le DataFrame contenant les données.\n","        pages (list): Liste des pages à supprimer.\n","        target_column (str): La colonne contenant les parcours.\n","\n","    Returns:\n","        pd.DataFrame: Un DataFrame nettoyé des pages spécifiées.\n","    \"\"\"\n","    def filter_journey(journey):\n","        \"\"\"Filtre les pages non désirées du parcours.\"\"\"\n","        journey_list = journey.split('-')\n","        filtered_list = [page for page in journey_list if page not in pages]\n","        return '-'.join(filtered_list)\n","\n","    data[target_column] = data[target_column].apply(filter_journey)\n","    return data"],"metadata":{"id":"gWSts4YhdynQ","executionInfo":{"status":"ok","timestamp":1743982268631,"user_tz":-60,"elapsed":2,"user":{"displayName":"FATIMA AIT BA","userId":"04083776487665113094"}}},"execution_count":35,"outputs":[]},{"cell_type":"markdown","source":["Export clean data to a new csv file"],"metadata":{"id":"I6gbWTivv1bk"}},{"cell_type":"code","source":["# export clean data to new csv file\n","new_df.to_csv(r'/content/drive/MyDrive/Colab Notebooks/user-jurney-analysis/clean_data.csv', index = False)"],"metadata":{"id":"LefZiPmgvx2H","executionInfo":{"status":"ok","timestamp":1743982268638,"user_tz":-60,"elapsed":6,"user":{"displayName":"FATIMA AIT BA","userId":"04083776487665113094"}}},"execution_count":36,"outputs":[]}]}